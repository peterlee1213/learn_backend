<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powernode.mapper.CarMapper">

    <select id="selectByIfFilter" resultType="car"> 
        select * from t_car where 1=1 
        
        <!--如果test的值为true, 则会把if标签之内的内容拼接到上面的sql语句中,否则就不会 -->
        <!-- test属性中可以使用的是: -->
        <!-- 1. 如果使用了@Param注解,那么test中要出现的是@param注解指定的参数名@Param("brand"), 那么这里就使用brand -->
        <!-- 2. 若没有使用@Param注解,那么test中要出现的是param1等等 -->
        <!-- 3. 当使用了POJO,那么test中出现的是POJO类的属性名 -->
        <!-- 注意: 在mybatis的动态SQL中不能使用&&,只能使用and -->
        <if test="brand != null and brand != ''"> and brand like "%"#{brand}"%" </if>
        <if test="guidePrice != null and guidePrice != ''"> and guide_price > #{guidePrice} </if>
        <if test="carType != null and carType != ''"> and car_type = #{carType} </if>
    </select>

    <select id="selectByIfFilterWithWhere" resultType="car"> 
        select * from t_car
        
        <!--where标签是负责where子句动态生成的 -->
        <!-- 如果这些if条件一个都不成立, where关键字都不会生成 -->
        <!-- where标签可智能地删除多余的and或者or -->
        <where>
            <if test="brand != null and brand != ''"> and brand like "%"#{brand}"%" </if>
            <if test="guidePrice != null and guidePrice != ''"> and guide_price > #{guidePrice} </if>
            <if test="carType != null and carType != ''"> and car_type = #{carType} </if>
        </where>
    </select>

    <select id="selectByIfFilterWithTrim" resultType="car"> 
        select * from t_car 
    
        <!-- 
            prefix 加前缀
            suffix 加后缀
            prefixOverrides 删除前缀
            suffixOverrides 删除后缀
        -->
        <!-- prefix="where"表示在trim标签内部所有内容前面加where -->
        <!-- suffixOverrides="and|or"表示把trim标签中内容的后缀and|or去掉 -->
        <trim prefix="where" suffixOverrides="and|or">
            <if test="brand != null and brand != ''"> brand like "%"#{brand}"%" and </if>
            <if test="guidePrice != null and guidePrice != ''"> guide_price > #{guidePrice} and </if>
            <if test="carType != null and carType != ''"> car_type = #{carType} and </if>
        </trim>
    </select>

    <update id="updateWithSet">
        update t_car
        <set>
            <if test="carNum != null and carNum != ''">
                car_num = #{carNum},
            </if>
            <if test="brand != null and brand != ''"> brand = #{brand},, </if>
            <if test="guidePrice != null and guidePrice != ''"> guide_price = #{guidePrice}, </if>
            <if test="produceTime != null and produceTime != ''"> produce_time = #{produceTime}, </if>
            <if test="carType != null and carType != ''"> car_type = #{carType}, </if>
        </set>
        where id = #{id}
    </update>

    <select id="selectByChoose" resultType="car">
        select * from t_car
        <where>
            <choose>
                <when test="brand != null and brand != ''">brand like "%"#{brand}"%"</when>
                <when test="guidePrice != null and guidePrice != ''">guide_price > #{guidePrice}</when>
                <otherwise>car_type = #{carType}</otherwise>
            </choose>
        </where>
    </select>

    <!-- 使用foreach标签一次删除多条记录 -->
    <delete id="deleteByIds">
        delete from t_car where id in (
        <!-- 
                foreach标签的属性:
                    collection: 指定数组或集合
                    item: 代表数组或集合中的元素
                    separator: 循环之间的分隔符
                #{id}中的id是item属性的值
                最终这个foreach标签会变成将ids这个数组或集合的所有元素逗号分隔的字串
            -->
            <foreach collection="ids" item="id" separator=",">#{id}</foreach>
        )
    </delete>

    <!-- 使用foreach一次插入多条记录 -->
     <insert id="insertMultipleCars">
        insert into t_car values
        <foreach collection="cars" item="recordItem" separator=",">
            (null,#{recordItem.carNum},#{recordItem.brand},#{recordItem.guidePrice},#{recordItem.produceTime},#{recordItem.carType})
        </foreach>
     </insert>

     <!-- 使用where or + foreach 标签批量删除 -->
    <delete id="deleteByIdsWithWhereAndForEach">
        delete from t_car
        <where>
            <foreach collection="ids" item="id" separator="or">
                id = #{id}
            </foreach>
        </where>
    </delete>

    <!-- 使用sql和include标签 -->
    <sql id="carField">id,car_num,brand</sql>
    <select id="selectAllWithSqlAndInclude" resultType="map">
        select <include refid="carField"></include> from t_car
    </select>

</mapper>