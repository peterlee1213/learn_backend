<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//En" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.powernode.mapper.StudentMapper">

    <!-- 以下是简单类型传参且只有一个参数 -->
    <select id="selectById" resultType="student"> select * from t_student where id = #{id} </select>
    <select id="selectByName" resultType="student" parameterType="java.lang.String"> select * from
        t_student where name like '%${name, javaType=String, jdbcType=VARCHAR }%'</select>
    <select id="selectByBirth" resultType="student"> select * from t_student where birth = #{birth} </select>
    <select id="selectBySex" resultType="student"> select * from t_student where sex = #{sex} </select>

    <!-- 以下是用map传参且只有一个参数 -->
    <insert id="insertOneWithMap" parameterType="map"> insert into t_student (id, name, age, height,
        birth, sex) values (null, #{name}, #{age}, #{height}, #{birth}, #{sex} ) </insert>

    <!-- 以下是用POJO类传参只有一个参数 -->
    <insert id="insertOneWithPOJO" parameterType="student"> insert into t_student values(null,
        #{name}, #{age}, #{height}, #{birth}, #{sex}) </insert>

    <!-- 以下根据名称和性别查询,传多个参数,必须使用arg0/arg1/arg2.....以此类推,顺序与接口中的参数顺序对应, 也可以写param1/param2.....以此类推 -->
    <select id="selectByNameAndSex" resultType="student"> select * from t_student where name like
        '%${arg0}%' and sex = #{arg1} </select>

    <!-- 以下根据名称和性别查询,传多个参数, 使用@Param注解,这时候param1,param2.....这种方式还是可以使用的 -->
    <select id="selectByNameAndSex2" resultType="student"> select * from t_student where name like
        '%${name}%' and sex = #{sex} </select>
</mapper>